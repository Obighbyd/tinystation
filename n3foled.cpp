/*
 * n3foled.c - nfont routine
 * Lee yongjae, setu74p@gmail.com, 2017-04-28.
 * Lee yongjae, setup@arirang.snu.ac.kr, 1995.7.2
 */

/* y is 0 at top and 13 at bottom */

#include <pgmspace.h>
#include <OLEDDisplay.h>
#include "utf8ncode.h"


#define FONT_HEIGHT  14

typedef struct {
  uint8_t start;
  uint8_t end;
  uint8_t top_bound;
  uint8_t bottom_bound;
  unsigned short image[FONT_HEIGHT];
} font_item;

const font_item font_data[] PROGMEM = {
/* Pinetree (Narae Bitmap Font) */
/* ascii font: 0x20 - 0x7f */
//0x00
{ 0,4,13,0, {0} },
{ 0,3,1,10, {0,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0,0xc000,0xc000} },
{ 0,6,0,2, {0xd800,0xd800,0x9000} },
{ 0,8,3,8, {0,0,0,0x6c00,0xfe00,0x6c00,0x6c00,0xfe00,0x6c00} },
{ 0,6,2,10, {0,0,0x2000,0x7000,0xa800,0xa000,0x7000,0x2800,0xa800,0x7000,0x2000} },
{ 0,6,3,8, {0,0,0,0xc800,0xd800,0x3000,0x6000,0xd800,0x9800} },
{ 0,8,2,9, {0,0,0x7000,0xd800,0xd800,0x7000,0x7e00,0xcc00,0xde00,0x7200} },
{ 0,3,0,2, {0xc000,0xc000,0x8000} },
{ 0,5,2,9, {0,0,0x3000,0x6000,0xc000,0xc000,0xc000,0xc000,0x6000,0x3000} },
{ 0,5,2,9, {0,0,0xc000,0x6000,0x3000,0x3000,0x3000,0x3000,0x6000,0xc000} },
{ 0,8,4,8, {0,0,0,0,0x6c00,0x3800,0xfe00,0x3800,0x6c00} },
{ 0,7,3,8, {0,0,0,0x3000,0x3000,0xfc00,0xfc00,0x3000,0x3000} },
{ 0,3,9,11, {0,0,0,0,0,0,0,0,0,0xc000,0xc000,0x8000} },
{ 0,6,5,6, {0,0,0,0,0,0xf800,0xf800} },
{ 0,3,9,10, {0,0,0,0,0,0,0,0,0,0xc000,0xc000} },
{ 0,6,2,9, {0,0,0x1800,0x1800,0x3000,0x3000,0x6000,0x6000,0xc000,0xc000} },
//0x10
{ 0,7,3,9, {0,0,0,0x7800,0xcc00,0xcc00,0xcc00,0xcc00,0xcc00,0x7800} },
{ 0,5,2,9, {0,0,0x6000,0xe000,0x6000,0x6000,0x6000,0x6000,0x6000,0xf000} },
{ 0,7,2,9, {0,0,0x7800,0xcc00,0xcc00,0xc00,0x1800,0x3000,0x6400,0xfc00} },
{ 0,7,2,9, {0,0,0x7800,0xcc00,0xcc00,0x1800,0xc00,0xcc00,0xcc00,0x7800} },
{ 0,7,2,9, {0,0,0x800,0x1800,0x3800,0x7800,0xd800,0xfc00,0x1800,0x3c00} },
{ 0,7,2,9, {0,0,0xfc00,0xc000,0xc000,0xf800,0xc00,0xc00,0xcc00,0x7800} },
{ 0,7,2,9, {0,0,0x3800,0x6000,0xc000,0xf800,0xcc00,0xcc00,0xcc00,0x7800} },
{ 0,7,2,9, {0,0,0xfc00,0xcc00,0xc00,0x1800,0x1800,0x3000,0x3000,0x3000} },
{ 0,7,2,9, {0,0,0x7800,0xcc00,0xcc00,0x7800,0xcc00,0xcc00,0xcc00,0x7800} },
{ 0,7,2,9, {0,0,0x7800,0xcc00,0xcc00,0xcc00,0x7c00,0xc00,0x1800,0x7000} },
{ 0,3,3,8, {0,0,0,0xc000,0xc000,0,0,0xc000,0xc000} },
{ 0,3,3,9, {0,0,0,0xc000,0xc000,0,0,0xc000,0xc000,0x8000} },
{ 0,6,2,9, {0,0,0x1800,0x3000,0x6000,0xc000,0xc000,0x6000,0x3000,0x1800} },
{ 0,6,3,7, {0,0,0,0xf800,0xf800,0,0xf800,0xf800} },
{ 0,6,2,9, {0,0,0xc000,0x6000,0x3000,0x1800,0x1800,0x3000,0x6000,0xc000} },
{ 0,7,1,10, {0,0x7800,0xcc00,0xcc00,0xc00,0x1800,0x3000,0x3000,0,0x3000,0x3000} },
//0x20
{ 0,8,3,9, {0,0,0,0x3800,0x4400,0x9a00,0xaa00,0xbe00,0x4400,0x3800} },
{ 0,8,1,9, {0,0x1000,0x3800,0x6c00,0xc600,0xc600,0xfe00,0xc600,0xc600,0xc600} },
{ 0,8,1,9, {0,0xfc00,0xc600,0xc600,0xc600,0xfc00,0xc600,0xc600,0xc600,0xfc00} },
{ 0,8,1,9, {0,0x3c00,0x6600,0xc200,0xc000,0xc000,0xc000,0xc200,0x6600,0x3c00} },
{ 0,8,1,9, {0,0xf800,0xcc00,0xc600,0xc600,0xc600,0xc600,0xc600,0xcc00,0xf800} },
{ 0,7,1,9, {0,0xfc00,0xc000,0xc000,0xc000,0xf800,0xc000,0xc000,0xc000,0xfc00} },
{ 0,7,1,9, {0,0xfc00,0xc000,0xc000,0xc000,0xf800,0xc000,0xc000,0xc000,0xc000} },
{ 0,8,1,9, {0,0x3c00,0x6600,0xc200,0xc000,0xc000,0xce00,0xc600,0x6600,0x3e00} },
{ 0,8,1,9, {0,0xc600,0xc600,0xc600,0xc600,0xfe00,0xc600,0xc600,0xc600,0xc600} },
{ 0,3,1,9, {0,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000} },
{ 0,7,1,9, {0,0xc00,0xc00,0xc00,0xc00,0xc00,0xc00,0xcc00,0xcc00,0x7800} },
{ 0,8,1,9, {0,0xc600,0xcc00,0xd800,0xf000,0xe000,0xf000,0xd800,0xcc00,0xc600} },
{ 0,7,1,9, {0,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xfc00} },
{ 0,9,1,9, {0,0xc300,0xe700,0xff00,0xdb00,0xdb00,0xc300,0xc300,0xc300,0xc300} },
{ 0,8,1,9, {0,0xc600,0xc600,0xe600,0xf600,0xde00,0xce00,0xc600,0xc600,0xc600} },
{ 0,9,1,9, {0,0x3c00,0x6600,0xc300,0xc300,0xc300,0xc300,0xc300,0x6600,0x3c00} },
//0x30
{ 0,8,1,9, {0,0xfc00,0xc600,0xc600,0xc600,0xfc00,0xc000,0xc000,0xc000,0xc000} },
{ 0,9,1,9, {0,0x3c00,0x6600,0xc300,0xc300,0xc300,0xc300,0xdf00,0x6600,0x3f00} },
{ 0,8,1,9, {0,0xfc00,0xc600,0xc600,0xc600,0xfc00,0xf000,0xd800,0xcc00,0xc600} },
{ 0,7,1,9, {0,0x7800,0xcc00,0xc400,0xe000,0x7800,0x1c00,0x8c00,0xcc00,0x7800} },
{ 0,7,1,9, {0,0xfc00,0x3000,0x3000,0x3000,0x3000,0x3000,0x3000,0x3000,0x3000} },
{ 0,8,1,9, {0,0xc600,0xc600,0xc600,0xc600,0xc600,0xc600,0xc600,0xc600,0x7c00} },
{ 0,8,1,9, {0,0xc600,0xc600,0xc600,0xc600,0xc600,0x6c00,0x6c00,0x3800,0x1000} },
{ 0,9,1,9, {0,0xc300,0xc300,0xc300,0xc300,0xdb00,0xdb00,0xff00,0xe700,0xc300} },
{ 0,8,1,9, {0,0xc600,0xc600,0x6c00,0x3800,0x1000,0x3800,0x6c00,0xc600,0xc600} },
{ 0,9,1,9, {0,0xc300,0xc300,0x6600,0x3c00,0x1800,0x1800,0x1800,0x1800,0x1800} },
{ 0,7,1,9, {0,0xfc00,0xc00,0xc00,0x1800,0x3000,0x6000,0xc000,0xc000,0xfc00} },
{ 0,5,2,9, {0,0,0xf000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xf000} },
{ 0,6,2,9, {0,0,0xc000,0xc000,0x6000,0x6000,0x3000,0x3000,0x1800,0x1800} },
{ 0,5,2,9, {0,0,0xf000,0x3000,0x3000,0x3000,0x3000,0x3000,0x3000,0xf000} },
{ 0,6,0,2, {0x2000,0x7000,0xd800} },
{ 0,6,11,12, {0,0,0,0,0,0,0,0,0,0,0,0xf800,0xf800} },
//0x40
{ 0,3,0,2, {0xc000,0xc000,0x4000} },
{ 0,7,4,9, {0,0,0,0,0x7800,0xc00,0x7c00,0xcc00,0xcc00,0x7c00} },
{ 0,7,1,9, {0,0xc000,0xc000,0xc000,0xf800,0xcc00,0xcc00,0xcc00,0xcc00,0xf800} },
{ 0,7,4,9, {0,0,0,0,0x7800,0xcc00,0xc000,0xc000,0xcc00,0x7800} },
{ 0,7,1,9, {0,0xc00,0xc00,0xc00,0x7c00,0xcc00,0xcc00,0xcc00,0xcc00,0x7c00} },
{ 0,7,4,9, {0,0,0,0,0x7800,0xcc00,0xfc00,0xc000,0xcc00,0x7800} },
{ 0,6,1,9, {0,0x3800,0x6000,0x6000,0xf800,0x6000,0x6000,0x6000,0x6000,0x6000} },
{ 0,7,4,11, {0,0,0,0,0x7c00,0xcc00,0xcc00,0xcc00,0xcc00,0x7c00,0xc00,0xf800} },
{ 0,7,1,9, {0,0xc000,0xc000,0xc000,0xf800,0xcc00,0xcc00,0xcc00,0xcc00,0xcc00} },
{ 0,3,1,9, {0,0xc000,0xc000,0,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000} },
{ 0,4,1,11, {0,0x6000,0x6000,0,0x6000,0x6000,0x6000,0x6000,0x6000,0x6000,0x6000,0xc000} },
{ 0,7,1,9, {0,0xc000,0xc000,0xc000,0xcc00,0xd800,0xf000,0xf000,0xd800,0xcc00} },
{ 0,3,1,9, {0,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000} },
{ 0,9,4,9, {0,0,0,0,0xfe00,0xdb00,0xdb00,0xdb00,0xdb00,0xdb00} },
{ 0,7,4,9, {0,0,0,0,0xf800,0xcc00,0xcc00,0xcc00,0xcc00,0xcc00} },
{ 0,7,4,9, {0,0,0,0,0x7800,0xcc00,0xcc00,0xcc00,0xcc00,0x7800} },
//0x50
{ 0,7,4,11, {0,0,0,0,0xf800,0xcc00,0xcc00,0xcc00,0xcc00,0xf800,0xc000,0xc000} },
{ 0,7,4,11, {0,0,0,0,0x7c00,0xcc00,0xcc00,0xcc00,0xcc00,0x7c00,0xc00,0xc00} },
{ 0,6,4,9, {0,0,0,0,0xd800,0xf800,0xe000,0xc000,0xc000,0xc000} },
{ 0,6,4,9, {0,0,0,0,0x7800,0xc000,0xf000,0x7800,0x1800,0xf000} },
{ 0,6,2,9, {0,0,0x6000,0x6000,0xf800,0x6000,0x6000,0x6000,0x6000,0x3800} },
{ 0,7,4,9, {0,0,0,0,0xcc00,0xcc00,0xcc00,0xcc00,0xdc00,0x6c00} },
{ 0,7,4,9, {0,0,0,0,0xcc00,0xcc00,0xcc00,0xcc00,0x7800,0x3000} },
{ 0,9,4,9, {0,0,0,0,0xdb00,0xdb00,0xdb00,0xdb00,0x7e00,0x2400} },
{ 0,7,4,9, {0,0,0,0,0xcc00,0x7800,0x3000,0x3000,0x7800,0xcc00} },
{ 0,7,4,11, {0,0,0,0,0xcc00,0xcc00,0xcc00,0xcc00,0xcc00,0x7c00,0xc00,0xf800} },
{ 0,6,4,9, {0,0,0,0,0xf800,0x1800,0x3000,0x6000,0xc000,0xf800} },
{ 0,5,1,9, {0,0x3000,0x6000,0x6000,0x6000,0xc000,0x6000,0x6000,0x6000,0x3000} },
{ 0,3,0,10, {0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000,0xc000} },
{ 0,5,1,9, {0,0xc000,0x6000,0x6000,0x6000,0x3000,0x6000,0x6000,0x6000,0xc000} },
{ 0,7,4,6, {0,0,0,0,0x6400,0xfc00,0x9800} },
{ 0,8,13,0, {0} },

/* ncode font: 0xa1 - 0xe5 */
/* cho-sung */
{ 0,8,13,0, {0} },  /* f1 fill code */
{ 0,8,1,5, {0,0x7e00,0x600,0x600,0x600,0x600} },
{ 0,10,1,5, {0,0x7f80,0x1980,0x1980,0x1980,0x1980} },
{ 0,8,1,5, {0,0x6000,0x6000,0x6000,0x6000,0x7e00} },
{ 0,8,1,5, {0,0x7e00,0x6000,0x6000,0x6000,0x7e00} },
{ 0,10,1,5, {0,0x7f80,0x6600,0x6600,0x6600,0x7f80} },
{ 0,8,1,5, {0,0x7e00,0x600,0x7e00,0x6000,0x7e00} },
{ 0,8,1,5, {0,0x7e00,0x6600,0x6600,0x6600,0x7e00} },
{ 0,8,1,5, {0,0x6600,0x6600,0x7e00,0x6600,0x7e00} },
{ 0,12,1,5, {0,0x6660,0x6660,0x7fe0,0x6660,0x7fe0} },
{ 0,8,1,5, {0,0x400,0xc00,0x1800,0x3c00,0x6600} },
{ 0,12,1,5, {0,0x440,0xcc0,0x1980,0x3fc0,0x6660} },
{ 0,8,1,5, {0,0x3c00,0x6600,0x6600,0x6600,0x3c00} },
{ 0,8,1,5, {0,0x7e00,0xc00,0x1800,0x3c00,0x6600} },
{ 0,12,1,5, {0,0x7fe0,0xcc0,0x1980,0x3fc0,0x6660} },
{ 0,8,0,5, {0x1800,0x7e00,0xc00,0x1800,0x3c00,0x6600} },
{ 0,8,1,5, {0,0x7e00,0x600,0x7e00,0x600,0x600} },
{ 0,8,1,5, {0,0x7e00,0x6000,0x7e00,0x6000,0x7e00} },
{ 0,9,1,5, {0,0x7f00,0x3600,0x3600,0x3600,0x7f00} },
{ 0,8,0,5, {0x1800,0x7e00,0x3c00,0x6600,0x6600,0x3c00} },
/* jung-sung */
{ 0,0,13,0, {0} },  /* f2 fill code */
{ 3,7,0,8, {0x1800,0x1800,0x1800,0x1e00,0x1800,0x1800,0x1800,0x1800,0x1800} },
{ 2,8,0,8, {0x600,0x3600,0x3600,0x3e00,0x3600,0x3600,0x3600,0x600,0x600} },
{ 3,7,0,8, {0x1800,0x1800,0x1e00,0x1800,0x1e00,0x1800,0x1800,0x1800,0x1800} },
{ 2,8,0,8, {0x600,0x3600,0x3e00,0x3600,0x3e00,0x3600,0x3600,0x600,0x600} },
{ 5,8,0,8, {0x600,0x600,0x600,0x1e00,0x600,0x600,0x600,0x600,0x600} },
{ 3,9,0,8, {0x300,0x1b00,0x1b00,0x7b00,0x1b00,0x1b00,0x1b00,0x300,0x300} },
{ 5,8,0,8, {0x600,0x600,0x1e00,0x600,0x1e00,0x600,0x600,0x600,0x600} },
{ 3,9,0,8, {0x300,0x1b00,0x7b00,0x1b00,0x7b00,0x1b00,0x1b00,0x300,0x300} },
{ 8,8,5,7, {0,0,0,0,0,0x1800,0x1800,0x7e00} },
{ 8,12,0,8, {0xc0,0xc0,0xc0,0xf0,0xc0,0x18c0,0x18c0,0x7ec0,0xc0} },
{ 8,14,0,8, {0x18,0xd8,0xd8,0xf8,0xd8,0x18d8,0x18d8,0x7e18,0x18} },
{ 8,11,0,8, {0xc0,0xc0,0xc0,0xc0,0xc0,0x18c0,0x18c0,0x7ec0,0xc0} },
{ 8,9,5,7, {0,0,0,0,0,0x3600,0x3600,0x7f00} },
{ 8,8,7,9, {0,0,0,0,0,0,0,0x7e00,0x1800,0x1800} },
{ 8,11,0,9, {0xc0,0xc0,0xc0,0x3c0,0xc0,0xc0,0xc0,0x7ec0,0x18c0,0x1800} },
{ 8,14,0,9, {0x18,0xd8,0xd8,0x3d8,0xd8,0xd8,0xd8,0x7e18,0x1818,0x1800} },
{ 8,11,0,9, {0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0x7ec0,0x18c0,0x1800} },
{ 8,9,7,9, {0,0,0,0,0,0,0,0x7f00,0x3600,0x3600} },
{ 8,8,7,7, {0,0,0,0,0,0,0,0x7e00} },
{ 8,11,0,8, {0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0xc0,0x7ec0,0xc0} },
{ 5,8,0,8, {0x600,0x600,0x600,0x600,0x600,0x600,0x600,0x600,0x600} },
/* jong-sung */
{ 8,8,9,12, {0,0,0,0,0,0,0,0,0,0x7e00,0x600,0x600,0x600} },
{ 9,9,9,12, {0,0,0,0,0,0,0,0,0,0x7f80,0x1980,0x1980,0x1980} },
{ 9,9,9,12, {0,0,0,0,0,0,0,0,0,0x7980,0x1b00,0x1f00,0x1d80} },
{ 8,8,9,12, {0,0,0,0,0,0,0,0,0,0x6000,0x6000,0x6000,0x7e00} },
{ 9,9,9,13, {0,0,0,0,0,0,0,0,0,0x6000,0x6f80,0x6300,0x7f00,0xd80} },
{ 9,9,9,13, {0,0,0,0,0,0,0,0,0,0x6300,0x6f80,0x6700,0x7d80,0x700} },
{ 8,8,9,12, {0,0,0,0,0,0,0,0,0,0x7e00,0x6000,0x6000,0x7e00} },
{ 8,8,9,13, {0,0,0,0,0,0,0,0,0,0x7e00,0x600,0x7e00,0x6000,0x7e00} },
{ 9,9,9,13, {0,0,0,0,0,0,0,0,0,0x7800,0x1f80,0x7980,0x6180,0x7d80} },
{ 9,9,9,13, {0,0,0,0,0,0,0,0,0,0x7800,0x1f80,0x7d80,0x6d80,0x7f80} },
{ 9,9,9,13, {0,0,0,0,0,0,0,0,0,0x7800,0x1d80,0x7f80,0x6d80,0x7f80} },
{ 9,9,9,13, {0,0,0,0,0,0,0,0,0,0x7800,0x1980,0x7b00,0x6700,0x7d80} },
{ 9,9,9,13, {0,0,0,0,0,0,0,0,0,0x7f80,0x1e00,0x7f80,0x6600,0x7f80} },
{ 9,9,9,13, {0,0,0,0,0,0,0,0,0,0x7800,0x1f80,0x7b00,0x6300,0x7f80} },
{ 9,9,9,13, {0,0,0,0,0,0,0,0,0,0x7b00,0x1f80,0x7700,0x6d80,0x7f00} },
{ 8,8,9,12, {0,0,0,0,0,0,0,0,0,0x7e00,0x6600,0x6600,0x7e00} },
{ 8,8,9,13, {0,0,0,0,0,0,0,0,0,0x6600,0x6600,0x7e00,0x6600,0x7e00} },
{ 9,9,9,13, {0,0,0,0,0,0,0,0,0,0x6c80,0x6d80,0x7f00,0x6f80,0x7d80} },
{ 8,8,9,12, {0,0,0,0,0,0,0,0,0,0xc00,0x1800,0x3c00,0x6600} },
{ 9,9,9,12, {0,0,0,0,0,0,0,0,0,0xd80,0x1b00,0x3f00,0x6d80} },
{ 8,8,9,12, {0,0,0,0,0,0,0,0,0,0x3c00,0x6600,0x6600,0x3c00} },
{ 8,8,9,12, {0,0,0,0,0,0,0,0,0,0x7e00,0x1800,0x3c00,0x6600} },
{ 8,8,9,13, {0,0,0,0,0,0,0,0,0,0x1800,0x7e00,0x1800,0x3c00,0x6600} },
{ 8,8,9,13, {0,0,0,0,0,0,0,0,0,0x7e00,0x600,0x7e00,0x600,0x600} },
{ 8,8,9,13, {0,0,0,0,0,0,0,0,0,0x7e00,0x6000,0x7e00,0x6000,0x7e00} },
{ 8,8,9,12, {0,0,0,0,0,0,0,0,0,0x7f00,0x3600,0x3600,0x7f00} },
{ 8,8,9,13, {0,0,0,0,0,0,0,0,0,0x1800,0x7e00,0x3c00,0x6600,0x3c00} },
};

static int font_width(int c)
{
  const font_item *font = 
      ((c >= 0x20 && c <= 0x7f)? &font_data[c - 0x20] :
       (c >= 0xa1 && c <= 0xe5)? &font_data[(c - 0xa1) + 0x60] :
       NULL);
  if (font == NULL)
    return 0;
  return pgm_read_byte_near(&font->end) - pgm_read_byte_near(&font->start);
}

static int draw_font(OLEDDisplay *d, int ox, int oy, int c)
  /* returns next x */
{
  unsigned short image;
  int top_bound, bottom_bound;
  int x, y;
  const font_item *font = 
      ((c >= 0x20 && c <= 0x7f)? &font_data[c - 0x20] :
       (c >= 0xa1 && c <= 0xe5)? &font_data[(c - 0xa1) + 0x60] :
       NULL);
  if (font == NULL)
    return ox;

  bottom_bound = pgm_read_byte_near(&font->bottom_bound);
  ox -= pgm_read_byte_near(&font->start);

  for (y = pgm_read_byte_near(&font->top_bound); y <= bottom_bound; y++)
    for (image = pgm_read_word_near(&font->image[y]), x = ox; image; image <<= 1, x++)
      if ((image & 0x8000))
        d->setPixel(x, y + oy);
      
  return ox + pgm_read_byte_near(&font->end);
}

void n3f_drawString(OLEDDisplay *d, int x, int y, const char* utf8_str)
{
  int base_x = x;
  int n;
  int uc, uc_cho, uc_jung, uc_jong;
  const char *s;

  for (s = utf8_str; *s && (n = utf8_to_utf32((const unsigned char *)s, &uc)); s += n) {
    if (uc >= 1 && uc <= 127) {
      /* unicode ASCII */
      x = draw_font(d, x, y, uc);
    }
    else if (uc >= 44032 && uc <= 55195) {
      /* unicode hangul */
      /* (initial:0~18) x 588 + (medial:0~20) x 28 + (final:0~27) + 44032 */
      uc -= 44032;
      uc_cho  = uc / 588; uc %= 588;
      uc_jung = uc / 28 ; uc %= 28;
      uc_jong = uc;  // 0 for no jong-sung
      x = draw_font(d, x, y, uc_cho + 0xa2);
      x = draw_font(d, x, y, uc_jung + 0xb6);
      if (uc_jong)
        x = draw_font(d, x, y, uc_jong - 1 + 0xcb);
    }
    else {
      /* unicode unhandled range */
      x = draw_font(d, x, y, '?');
    }
  }
}

void n3f_drawStringMaxWidth(OLEDDisplay *d, int x, int y, int maxWidth, const char* utf8_str)
{
  int line_height = 18;
  int base_x = x;
  int max_x = x + maxWidth;
  int n, cw;
  int uc, uc_cho, uc_jung, uc_jong;
  const char *s;

  for (s = utf8_str; *s && (n = utf8_to_utf32((const unsigned char *)s, &uc)); s += n) {
    if (uc >= 1 && uc <= 127) {
      /* unicode ASCII */
      if (x + font_width(uc) >= max_x || uc == '\n') {
        x = base_x;
        y += line_height;
      }
      x = draw_font(d, x, y, uc);
    }
    else if (uc >= 44032 && uc <= 55195) {
      /* unicode hangul */
      /* (initial:0~18) x 588 + (medial:0~20) x 28 + (final:0~27) + 44032 */
      uc -= 44032;
      uc_cho  = uc / 588; uc %= 588;
      uc_jung = uc / 28 ; uc %= 28;
      uc_jong = uc;  // 0 for no jong-sung
      if (x + (font_width(uc_cho + 0xa2) + font_width(uc_jung + 0xb6) +
               ((uc_jong)? font_width(uc_jong - 1 + 0xcb) : 0)) >= max_x) {
        x = base_x;
        y += line_height;
      }    
      x = draw_font(d, x, y, uc_cho + 0xa2);
      x = draw_font(d, x, y, uc_jung + 0xb6);
      if (uc_jong)
        x = draw_font(d, x, y, uc_jong - 1 + 0xcb);
    }
    else {
      /* unicode unhandled range */
      x = draw_font(d, x, y, '?');
    }
  }
}

